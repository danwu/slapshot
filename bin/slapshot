#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'slapshot'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/todo` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/slapshot now"
  exit 64
end

include GLI::App

program_desc 'A command line interface to the Appshot API'

version Slapshot::VERSION

desc 'Your Appshot  url'
flag [:url]

desc 'Your Appshot instance'
flag [:i,:instance]

desc 'Your Appshot username'
flag [:u,:username]

desc 'Your Appshot password'
flag [:p,:password]

desc 'Search your instance of Appshot'
arg_name 'Pass in the query'
command :search do |c|

  c.desc 'Limit the search to this application or group'
  c.flag [:a, :app]

  c.desc 'Export the results to an Excel file with the given name'
  c.flag [:x, :xls]

  c.desc 'The maximum number of results the search should return'
  c.default_value 20
  c.flag [:c, :count]

  c.action do |global_options,options,args|

     if options[:a]
       @sc.set_app options[:a]
     end

     if args.length != 1
       raise 'The search command takes exactly one argument: the query'
     end
     
     r = @sc.search args[0], options[:c]
     
     if options[:x]
       @sc.to_xls r, options[:x]
       puts "Exported search results to #{options[:x]}"
     else
       puts @sc.to_table r
     end
  end
end

desc 'Describe upload here'
arg_name 'Describe arguments to upload here'
command :upload do |c|
  c.action do |global_options,options,args|
    puts "upload command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only

  url = global[:url] || ENV['APPSHOT_URL'] || "https://api.appshot.com"
  instance = global[:i] || ENV['APPSHOT_INSTANCE']  
  username = global[:u] || ENV['APPSHOT_USERNAME']
  password = global[:p] || ENV['APPSHOT_PASSWORD']

  @sc = SlapshotConnection.new url, instance, username, password
  
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
